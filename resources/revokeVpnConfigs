#!/bin/bash

# TODO: Move config to /etc/default or /etc/sysconfig to allow later reconfig.
VPN_FQDN=vpn.example
TENANT_ID={tenantId}
APPLICATION_ID={applicationId}
SECRET_TOKEN={secretToken}
ADMIN_API_TOKEN={adminApiToken}

# Get the Intune token so that we are allowed to do API calls
token="$(curl --silent --request POST "https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/token" \
	--header 'Content-Type: application/x-www-form-urlencoded' \
	--data "client_id=${APPLICATION_ID}&scope=https://graph.microsoft.com/.default&client_secret=${SECRET_TOKEN}&grant_type=client_credentials" | \
	jq --raw-output '.access_token')"

# Retrieve the managed device IDs of the Intune tenant
response="$(curl --include --silent 'https://graph.microsoft.com/v1.0/deviceManagement/managedDevices?$select=id' \
	--header "Authorization: Bearer ${token}" \
	--header 'Accept: application/json' \
	--header 'ConsistencyLevel: eventual')"
http_status=$(echo "${response}" | awk 'NR==1 {print $2}' | tr -d '\n')
if [ "${http_status}" != '200' ]; then
	printf 'We did not receive a HTTP 200 OK response from Intune\n%s\n' "${response}" >> /var/lib/vpn-provisioning/revocation.log
	exit 1
fi
declare -a managedIds="($(echo "${response}" | sed '1,/^\r\{0,1\}$/d' | jq --raw-output '.value | map(.id) | @sh'))"

# Retrieve our locally stored managed device IDs
localDeviceIds=($(cat /var/lib/vpn-provisioning/localDeviceIds.txt))

# Check the difference between the arrays
revokedIds=($(printf '%s\n' "${localDeviceIds[@]}" "${managedIds[@]}" "${managedIds[@]}" | sort | uniq -u))

# Revoke the VPN configs from unenrolled Intune devices
for id in ${revokedIds}
do
	response="$(curl --include --silent "https://${VPN_FQDN}/vpn-user-portal/admin/api/v1/destroy" \
		--header "Authorization: Bearer ${ADMIN_API_TOKEN}" \
		--data "user_id=${id}")"
	http_status=$(echo "${response}" | awk 'NR==1 {print $2}' | tr -d '\n')
	if [ "${http_status}" = '204' ]; then
		localDeviceIds=( "${localDeviceIds[@]/$id}" )
		printf 'Device %s has been revoked\n' "${id}" >> /var/lib/vpn-provisioning/revocation.log
	else
		printf 'We did not receive a HTTP 204 (no content) response from the eduVPN server\n%s\n' "${response}" >> /var/lib/vpn-provisioning/revocation.log
	fi
done
printf '%s\n' "${localDeviceIds[@]}" > /var/lib/vpn-provisioning/localDeviceIds.txt
